submit()
submit()
submit()
library(tidyr)
info()
bye()
swirl()
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex", "class"))
View(students2)
?gather
?separate
?gather
submit()
?separate
submit()
students2
gather(students2,sex,count)
gather(students2,sex,count, -grade)
xx <- gather(students2,sex,count, -grade)
separate(xx, sex, into = c("male","female"))
separate(xx, sex, into = c("male","female")
)
separate(xx, col = sex, into = c("male","female"))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
reset()
gather(students2, sex, count, -grade)
submit()
skip()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
skip()
View(students3)
bye()
swirl
swirl()
info()
main()
main()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?saperate
?separate
separate(res, sex_class, into = c("sex", "class"))
submit()
students3
submit()
submit()
submit()
?spread
submit()
submit()
submit()
info()
play()
View(students3)
gather(students3, class, grade, class1:class5, na.rm = TRUE)
mine <- gather(students3, class, grade, class1:class5, na.rm = TRUE)
View(mine)
spread(mine, class, grade)
spread(mine, test, grade)
nxt()
submit()
extract_numeric("class5")
play()
ply()
info()
play()
?mutate
nxt()
skip()
students4
submit()
submit()
submit()
passed
failed
play()
?mutate
?mutate
nxt()
mutate(passed, status = "passed")
passed <- mutate(passed, status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
submit()
submit()
submit()
submit()
submit()
?select
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class,into = c("sex","class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = T)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1998-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1 <- date-times
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours - 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
nyc <- now(tzone = America/New_York)
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hour(15) + minute(50)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
bye()
pwd
ls
dir
dir()
setwd("04-Exploratory-Data//w1")
dir()
dir()
getwd()
setwd("course-work-1/")
data.raw <- read.csv("household_power_consumption.txt", header = T, sep = ";", na.strings = "?", nrows = 2075259)
View(data.raw)
data.raw <- read.csv("household_power_consumption.txt", header = T, sep = ";", na.strings = "?", nrows = 2075259)
View(data.raw)
data.raw$Date <- as.Date(data.raw$Date, format = "%d/%m/%Y")
View(data.raw)
data <- subset(data.raw, subset = (Date >= "2007-02-01" & Data <= "2007-02-02"))
data <- subset(data.raw, subset = (Date >= "2007-02-01" & Date <= "2007-02-02"))
View(data)
rm(data.raw)
?strptime
?paste
data$DateTime <- paste(data$Date, data$Time)
View(data)
data$DateTime <- strptime(data$DateTime, "%d/%m/%Y %H:%M:%S")
?hist
hist(x = data$Global_active_power, main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "Red")
View(data)
data.raw <- read.csv("household_power_consumption.txt", header = T,
sep = ";", na.strings = "?", nrows = 2075259)
data.raw$Date <- as.Date(data.raw$Date, format = "%d/%m/%Y")
data <- subset(data.raw, subset = (Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data.raw)
data$DateTime <- paste(data$Date, data$Time)
View(data)
class(data$DateTime)
data$DateTime <- strptime(data$DateTime, "%Y-%m-%d %H:%M:%S")
View(data)
class(data$DateTime)
hist(x = data$Global_active_power, main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "Red")
dev.copy(png, file = "plot1.png", height = 480, width = 480)
dev.off()
data.raw <- read.csv("household_power_consumption.txt", header = T,
sep = ";", na.strings = "?", nrows = 2075259)
data.raw$Date <- as.Date(data.raw$Date, format = "%d/%m/%Y")
data <- subset(data.raw, subset = (Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data.raw)
data$DateTime <- paste(data$Date, data$Time)
data$DateTime <- strptime(data$DateTime, "%Y-%m-%d %H:%M:%S")
?plot
plot(data$Global_active_power~data$DateTime, type = "l", ylab = "Global Active Power (kilowatts)")
View(data)
plot(data$Global_active_power~data$DateTime, type = "l",
ylab = "Global Active Power (kilowatts)", xlab = "")
View(data)
View(data)
plot(data$Global_active_power~data$DateTime, type = "l",
ylab = "Global Active Power (kilowatts)", xlab = "")
plot(data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)", xlab = "")
plot(data$DateTime, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)", xlab = "")
dev.copy(png, file = "plot2.png", heigth = 480, width = 480)
plot(data$DateTime, data$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)", xlab = "")
dev.copy(png, file = "plot2.png", heigth = 480, width = 480)
dev.copy(png, file = "plot2.png", height = 480, width = 480)
dev.off()
data.raw <- read.csv("household_power_consumption.txt", header = T,
sep = ";", na.strings = "?", nrows = 2075259)
data.raw$Date <- as.Date(data.raw$Date, format = "%d/%m/%Y")
data <- subset(data.raw, subset = (Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data.raw)
data$DateTime <- paste(data$Date, data$Time)
data$DateTime <- strptime(data$DateTime, "%Y-%m-%d %H:%M:%S")
?lines
View(data)
with(data, {
plot(Sub_metering_1, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(Sub_metering_2, col = "Red")
lines(Sub_metering_3, col = "Blue")
})
View(data)
data.raw <- read.csv("household_power_consumption.txt", header = T,
sep = ";", na.strings = "?", nrows = 2075259)
data.raw$Date <- as.Date(data.raw$Date, format = "%d/%m/%Y")
data <- subset(data.raw, subset = (Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data.raw)
data$DateTime <- paste(data$Date, data$Time)
View(data)
data$DateTime <- strptime(data$DateTime, "%Y-%m-%d %H:%M:%S")
View(data)
with(data, {
plot(Sub_metering_1, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(Sub_metering_2, col = "Red")
lines(Sub_metering_3, col = "Blue")
})
with(data, {
plot(Sub_metering_1~DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(Sub_metering_2~DateTime, col = "Red")
lines(Sub_metering_3~DateTime, col = "Blue")
})
data$Sub_metering_1 <- as.numeric(as.character(Sub_metering_1))
data$Sub_metering_2 <- as.numeric(as.character(Sub_metering_2))
data$Sub_metering_3 <- as.numeric(as.character(Sub_metering_3))
View(data)
data$Sub_metering_1 <- as.numeric(as.character(data$Sub_metering_1))
data$Sub_metering_2 <- as.numeric(as.character(data$Sub_metering_2))
data$Sub_metering_3 <- as.numeric(as.character(data$Sub_metering_3))
with(data, {
plot(Sub_metering_1, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(Sub_metering_2, col = "Red")
lines(Sub_metering_3, col = "Blue")
})
# Plot 3 : lines plotting
#with(data, {
plot(data, Sub_metering_1, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(data,Sub_metering_2, col = "Red")
lines(data,Sub_metering_3, col = "Blue")
#})
plot(DateTime, Sub_metering_1, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(DateTime,Sub_metering_2, col = "Red")
lines(DateTime,Sub_metering_3, col = "Blue")
#})
plot(data$DateTime, data$Sub_metering_1, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(data$DateTime,data$Sub_metering_2, col = "Red")
lines(data$DateTime,data$Sub_metering_3, col = "Blue")
#})
with(data, {
plot(DateTime, Sub_metering_1, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(DateTime, Sub_metering_2, col = "Red")
lines(DateTime, Sub_metering_3, col = "Blue")
})
dev.copy(png, file = "plot3.png", height = 480, width = 480)
dev.off()
with(data, {
plot(DateTime, Sub_metering_1, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(DateTime, Sub_metering_2, col = "Red")
lines(DateTime, Sub_metering_3, col = "Blue")
})
legend("topright", col = c("black", "red", "blue"), lty = 1, lwd = 2,
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png", height = 480, width = 480)
dev.off()
data.raw <- read.csv("household_power_consumption.txt", header = T,
sep = ";", na.strings = "?", nrows = 2075259)
data.raw$Date <- as.Date(data.raw$Date, format = "%d/%m/%Y")
data <- subset(data.raw, subset = (Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data.raw)
data$DateTime <- paste(data$Date, data$Time)
data$DateTime <- strptime(data$DateTime, "%Y-%m-%d %H:%M:%S")
?par
par(mfrow = c(2,2))
with(data, {
plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
plot(DateTime, Voltage, type = "l", ylab = "Voltage (volt)", xlab = "datetime")
plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "")
lines(DateTime, Sub_metering_2, col = "Red")
lines(DateTime, Sub_metering_3, col = "Blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, lwd = 2, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime")
})
# Plot 4 : 4 graphs
par(mfrow = c(2,2))
with(data, {
plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = "")
plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "")
lines(DateTime, Sub_metering_2, col = "Red")
lines(DateTime, Sub_metering_3, col = "Blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, lwd = 2, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime")
})
dev.copy(png, file = "plot4.png", height = 480, width = 480)
dev.off()
# Plot 4 : 4 graphs
par(mfrow = c(2,2))
with(data, {
plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = "")
plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "")
lines(DateTime, Sub_metering_2, col = "Red")
lines(DateTime, Sub_metering_3, col = "Blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, lwd = 2, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime")
})
# Export as png
dev.copy(png, file = "plot4.png", height = 480, width = 480, units = "px")
dev.off()
# Plot 4 : 4 graphs
par(mfrow = c(2,2))
with(data, {
plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = "")
plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", ylim=c(0,40))
lines(DateTime, Sub_metering_2, col = "Red")
lines(DateTime, Sub_metering_3, col = "Blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime")
})
# Export as png
dev.copy(png, file = "plot4.png", height = 480, width = 480, units = "px")
dev.off()
par(mfrow = c(2,2))
with(data, {
plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = "")
plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "")
lines(DateTime, Sub_metering_2, col = "Red")
lines(DateTime, Sub_metering_3, col = "Blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", ylim = c(0,5))
})
par(mfrow = c(2,2))
with(data, {
plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = "")
plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "")
lines(DateTime, Sub_metering_2, col = "Red")
lines(DateTime, Sub_metering_3, col = "Blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", ylim = c(0.0,0.5))
})
?ylim
View(data)
par(mfrow = c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
with(data, {
plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = "")
plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "")
lines(DateTime, Sub_metering_2, col = "Red")
lines(DateTime, Sub_metering_3, col = "Blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", ylim = c(0.0,0.5))
})
dev.copy(png, file = "plot4.png", height = 480, width = 480, units = "px")
dev.off()
plot(data$DateTime, data$Global_active_power, type = "l", ylab = "Global Active Power", xlab = "")
plot(data$DateTime, data$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(data$DateTime, data$Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "")
lines(data$DateTime, data$Sub_metering_2, col = "Red")
lines(data$DateTime, data$Sub_metering_3, col = "Blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", ylim = c(0.0,0.5))
#})
data.raw <- read.csv("household_power_consumption.txt", header = T,
sep = ";", na.strings = "?", nrows = 2075259)
data.raw$Date <- as.Date(data.raw$Date, format = "%d/%m/%Y")
data <- subset(data.raw, subset = (Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data.raw)
data$DateTime <- paste(data$Date, data$Time)
data$DateTime <- strptime(data$DateTime, "%Y-%m-%d %H:%M:%S")
par(mfrow = c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(data$DateTime, data$Global_active_power, type = "l", ylab = "Global Active Power", xlab = "")
plot(data$DateTime, data$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(data$DateTime, data$Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "")
lines(data$DateTime, data$Sub_metering_2, col = "Red")
lines(data$DateTime, data$Sub_metering_3, col = "Blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", ylim = c(0.0,0.5))
plot(data$DateTime, data$Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", ylim = c(0.0,0.5))
dev.copy(png, file = "plot4.png", height = 480, width = 480, units = "px")
dev.off()
par(mfrow = c(2,2))
with(data, {
plot(DateTime, Global_active_power, type = "l", ylab = "Global Active Power", xlab = "")
plot(DateTime, Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(DateTime, Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "")
lines(DateTime, Sub_metering_2, col = "red")
lines(DateTime, Sub_metering_3, col = "blue")
legend("topright", col = c("black", "red", "blue"), lty = 1, bty = "n",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type = "l",
ylab = "Global_reactive_power", xlab = "datetime", ylim = c(0.0,0.5))
})
dev.copy(png, file = "plot4.png", height = 480, width = 480, units = "px")
dev.off()
